apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: url-shortener
    type: database
  ports:
  - port: 3306
---
apiVersion: v1
data:
  grant_permissions.sql: |
    GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,ALTER,DROP ON personal_website.* TO 'kellen'@'%';
kind: ConfigMap
metadata:
  name: mysql-permissions-config
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: url-shortener
      type: database
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: url-shortener
        type: database
    spec:
      containers:
      - name: mysql-db
        image: mysql:5.7
        envFrom:
        - secretRef:
            name: mysql-login
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-permissions
          mountPath: /docker-entrypoint-initdb.d
      - name: mysql-backup
# Set version here
        image: kellenschmidt/mysql-backup:latest
        imagePullPolicy: Always
        env:
        - name: ENV
# Set environment here
# Use sed in bin/crd.sh to replace "placeholder" with website name value
          value: placeholder
        envFrom:
        - secretRef:
            name: mysql-login
        - secretRef:
            name: dropbox-uploader-token
        volumeMounts:
        - name: mysql-backups
          mountPath: /home/backups
        lifecycle:
          preStop:
            exec:
              command: ["/home/bin/backup_db.sh","exit","&&","/home/bin/remove_backups.sh","exit","&&","/home/bin/upload_cloud.sh"]
      volumes:
      - name: mysql-storage
        emptyDir: {}
      - name: mysql-backups
        emptyDir: {}
      - name: mysql-permissions
        configMap:
          name: mysql-permissions-config
